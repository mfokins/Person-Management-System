@page "/Edit/{Id:int}"
@using Models
@using WebClient.Data
@inject IAdultService AdultService
@inject NavigationManager NavMgr
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Edit Adult with id: @Id</h3>

@if (adultToEdit == null)
{
    <em>Person not found!</em>
}
else
{
    <EditForm Model="@adultToEdit" OnValidSubmit="@Save">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            First Name:
            <br/>
            <InputText rows="1" @bind-Value="adultToEdit.FirstName"/>
        </div>
        <div class="form-group">
            Last Name:
            <br/>
            <InputText rows="1" @bind-Value="adultToEdit.LastName"/>
        </div>
        <div class="form-group">
            Gender:
            <br/>
            <InputSelect rows="1" @bind-Value="adultToEdit.Sex">
                <option value="null">Select</option>
                <option value="M">M</option>
                <option value="F">F</option>
                <option value="Other">Other</option>
            </InputSelect>
        </div>
        <div class="form-group">
            Age:
            <br/>
            <InputNumber rows="1" @bind-Value="adultToEdit.Age"/>
        </div>

        @* ------------------> Job item * <------------------*@
        <div class="form-group">
            Job title:
            <br/>
            <InputText rows="1" @bind-Value="adultToEdit.JobTitle.JobTitle"/>
        </div>
        <div class="form-group">
            Salary:
            <br/>
            <InputNumber rows="1" @bind-Value="adultToEdit.JobTitle.Salary"/>
        </div>
        @* ------------------> Job item * <------------------*@

        <div class="form-group">
            Height:
            <br/>
            <InputNumber rows="1" @bind-Value="adultToEdit.Height"/>
        </div>
        <div class="form-group">
            Wieght:
            <br/>
            <InputNumber rows="1" @bind-Value="adultToEdit.Weight"/>
        </div>
        <div class="form-group">
            Hair Color:
            <br/>
            <InputText rows="1" @bind-Value="adultToEdit.HairColor"/>
        </div>
        <div class="form-group">
            Eye color:
            <br/>
            <InputText rows="1" @bind-Value="adultToEdit.EyeColor"/>
        </div>
        <p class="actions">
            <button class="btn btn-outline-dark" type="submit">Save</button>
        </p>
    </EditForm>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private Adult adultToEdit;

    protected override async Task OnInitializedAsync()
    {
        adultToEdit = await AdultService.GetAdultAsync(Id);
    }

    private void Save()
    {
        AdultService.UpdateAsync(adultToEdit);
        NavMgr.NavigateTo("/Adults");
    }

}